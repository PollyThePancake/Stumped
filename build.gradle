plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.mod_version}-${project.minecraft_version}"
group = project.maven_group

repositories {

    // TerraBlender
    maven { url "https://maven.minecraftforge.net/" }

    // Jitpack
    maven { url 'https://jitpack.io' }

    // ClothConfig
    maven { url "https://maven.shedaniel.me/" }

    // ModMenu & Terraform Wood Api
    maven { url "https://maven.terraformersmc.com/" }

    // MidnightLib
    maven { url "https://api.modrinth.com/maven" }
}

dependencies {

    // Minecraft
    minecraft("com.mojang:minecraft:${project.minecraft_version}")

    // Fabric Yarn Mappings
    mappings("net.fabricmc:yarn:${project.minecraft_version}+${project.yarn_mappings}")

    // Fabric Loader
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

    // Fabric API
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}+${project.minecraft_version}")

    // TerraBlender
    modRuntimeOnly(modImplementation("com.github.glitchfiend:TerraBlender-fabric:${project.minecraft_version}-${project.terrablender_version}"))

    // MixinExtras
    include(implementation(annotationProcessor("com.github.LlamaLad7:MixinExtras:${project.mixinextras_version}")))

    // Fabric Shield Lib
    include(modImplementation("com.github.CrimsonDawn45:Fabric-Shield-Lib:v${project.fabric_shield_lib_version}-${project.minecraft_version}"))

    // Cloth Config
    include(modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}")) { exclude group: "net.fabricmc.fabric-api" }

    // Mod Menu
    modCompileOnly modRuntimeOnly("com.terraformersmc:modmenu:${project.mod_menu_version}") { exclude group: "net.fabricmc.fabric-api" }

    // Fabric-ASM
    include(modImplementation("com.github.Chocohead:Fabric-ASM:v${project.fabric_asm_version}")) {exclude group: "net.fabricmc.fabric-api"}

    // MidnightLib
    include(modImplementation("maven.modrinth:midnightlib:${project.midnightlib_version}"))

    // Terraform Wood Api
    include(modImplementation("com.terraformersmc.terraform-api:terraform-wood-api-v${terraform_wood_api_version}"))
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def dataOutput = 'src/main/generated'

loom {
    runs {
        datagen {
            server()

            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file(dataOutput)}"

            runDir "build/datagen"
        }
    }
}

sourceSets { main { resources { srcDirs += dataOutput } } }

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

loom { accessWidenerPath = file("src/main/resources/stumped.accesswidener") }

java { withSourcesJar() }

jar { from("LICENSE") { rename { "${it}_${archivesBaseName}" } } }

configurations.configureEach { resolutionStrategy { force("net.fabricmc:fabric-loader:$loader_version") } }